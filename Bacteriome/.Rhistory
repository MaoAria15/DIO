mutate(tax = fct_other(df$tax, keep=c(as.matrix(top30))))%>%
arrange(desc(tax))
#Set order for samples
df0$Sample <- factor(df0$Sample, levels = groups)
df0$Abundance <- df0$Abundance*100
top30 <-c(top30,"Other")
df0$tax <- factor(df0$tax,top30)
#join all qualitative palettes
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
S.barplot.species.treatment <- ggplot(df0, aes(Sample, Abundance, fill = fct_reorder(tax, Abundance, .fun = mean))) +
geom_col(width = 0.8) +
theme_classic() +
scale_fill_jco(name = "Taxonomy") +
scale_fill_manual(values=rep(col_vector,10),name="Phylum")+
theme(text = element_text(size = 10, colour = "Black"),
axis.line=element_line(size=0.5),
axis.text=element_text(size = 10, colour = "Black"),
axis.ticks=element_line(size=1, colour = "Black"),
strip.background = element_rect(colour = "white", fill = "white"),
axis.text.x=element_text(size= 10, angle = 0, hjust = 0.5, vjust = 1),
axis.title = element_text(size = 12, face = "bold"),
strip.text.x = element_text(angle = 0, size=12, face = "bold"),
legend.text = element_text(size=10,face = "italic"),
legend.key.size = unit(10, "pt"),
legend.title = element_text(size = 12,face = "bold")
) +
# theme_classic() +
ylab("Mean Relative abundance (%)") +
xlab("Treatment")
S.barplot.species.treatment
S.barplot.species.treatment <- ggplot(df0, aes(Sample, Abundance, fill = fct_reorder(tax, Abundance, .fun = mean))) +
geom_col(width = 0.8) +
theme_classic() +
scale_fill_jco(name = "Taxonomy") +
scale_fill_manual(values=rep(col_vector,10),name="Phylum")+
theme(text = element_text(size = 10, colour = "Black"),
axis.line=element_line(size=0.5),
axis.text=element_text(size = 10, colour = "Black"),
axis.ticks=element_line(size=1, colour = "Black"),
strip.background = element_rect(colour = "white", fill = "white"),
axis.text.x=element_text(size= 10, angle = 0, hjust = 0.5, vjust = 1),
axis.title = element_text(size = 12, face = "bold"),
strip.text.x = element_text(angle = 0, size=12, face = "bold"),
legend.text = element_text(size=10,face = "italic"),
legend.key.size = unit(10, "pt"),
legend.title = element_text(size = 12,face = "bold")
) +
scale_x_discrete(breaks=groups,
labels=c(glue("FVT\nChP"),
glue("FVT\nSDT"),
glue("FVT\nPyT"),
glue("Unmodified\nFVT"),
glue("Obese\ncontrol"),
glue("Lean\ncontrol")
)
) +
# theme_classic() +
ylab("Mean Relative abundance (%)") +
xlab("Treatment")
S.barplot.species.treatment
p_abundance_bar_termination <- ggplot(df0, aes(Sample, Abundance, fill = fct_reorder(tax, Abundance, .fun = mean))) +
geom_col(width = 0.8) +
theme_classic() +
scale_fill_jco(name = "Taxonomy") +
scale_fill_manual(values=rep(col_vector,10),name="Phylum")+
mytheme_beta+
scale_x_discrete(breaks=groups,
labels=c(glue("FVT\nChP"),
glue("FVT\nSDT"),
glue("FVT\nPyT"),
glue("Unmodified\nFVT"),
glue("Obese\ncontrol"),
glue("Lean\ncontrol")
)
) +
# theme_classic() +
ylab("Mean Relative abundance (%)") +
xlab("Treatment")
p_abundance_bar_termination
p_abundance_bar_termination <- ggplot(df0, aes(Sample, Abundance, fill = fct_reorder(tax, Abundance, .fun = mean))) +
geom_col(width = 0.8) +
theme_classic() +
scale_fill_jco(name = "Taxonomy") +
scale_fill_manual(values=rep(col_vector,10),name="Phylum")+
mytheme_beta+
scale_x_discrete(breaks=groups,
labels=c(glue("FVT\nChP"),
glue("FVT\nSDT"),
glue("FVT\nPyT"),
glue("Unmodified\nFVT"),
glue("Obese\ncontrol"),
glue("Lean\ncontrol")
)
) +
# theme_classic() +
labs(x= "Treatment",y="Mean Relative abundance (%)", title = "Termination")
p_abundance_bar_termination
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
all_variables <- ls()
variable_to_keep <- "p_abundance_bar_termination"
variables_to_remove <- setdiff(all_variables, variable_to_keep)
rm(list = variables_to_remove)
rm(variable_to_keep,variables_to_remove,all_variables)
all_variables <- ls()
variable_to_keep <- "p_BvsF"
variables_to_remove <- setdiff(all_variables, variable_to_keep)
rm(list = variables_to_remove)
rm(variable_to_keep,variables_to_remove,all_variables)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("p_rel_abundance_bac.R")
source("p_FvsB_ratio.R")
source("p_abundance_barplot_termination.R")
source("p_rel_abundance_bac.R")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("Analysis0_file_loading_and_prep.R")
ps <- subset_samples(PSB, Sample_time_point %in% c("Termination"))
vir.phyl <- tax_glom(ps, "Phylum", NArm = FALSE)
ps0 <- transform_sample_counts(vir.phyl, function(x) x *100/ sum(x))
ps1 <- merge_samples(ps0, "Treatment")
ps1 <- transform_sample_counts(ps1, function(x) x / sum(x))
#Create melted dataframe
df <- psmelt(ps1)
#Select last non-empty taxonomic rank
df[df==""] <- NA
df$tax <- apply(df, 1, function(x) tail(na.omit(x), 1))
top<-df %>%
# filter(level=="Phylum")%>%
group_by(tax)%>%
dplyr::summarize(mean_abund=mean(Abundance), .groups = "drop")%>%
arrange(desc(mean_abund))
#Find top 30 tax
top
top30 <- top$tax[1:6] #for species
# top30 <- top$tax[1:5] #for phylum
df0 <- df %>%
mutate(tax = fct_other(df$tax, keep=c(as.matrix(top30))))%>%
arrange(desc(tax))
#Set order for samples
df0$Sample <- factor(df0$Sample, levels = groups)
df0$Abundance <- df0$Abundance*100
top30 <-c(top30,"Other")
df0$tax <- factor(df0$tax,top30)
#join all qualitative palettes
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
p_abundance_bar_termination <- ggplot(df0, aes(Sample, Abundance, fill = fct_reorder(tax, Abundance, .fun = mean))) +
geom_col(width = 0.8) +
theme_classic() +
scale_fill_jco(name = "Taxonomy") +
scale_fill_manual(values=rep(col_vector,10),name="Phylum")+
mytheme_beta+
scale_x_discrete(breaks=groups,
labels=c(glue("FVT\nChP"),
glue("FVT\nSDT"),
glue("FVT\nPyT"),
glue("Unmodified\nFVT"),
glue("Obese\ncontrol"),
glue("Lean\ncontrol")
)
) +
# theme_classic() +
labs(x= "Treatment",y="Mean Relative abundance (%)", title = "Termination")
p_abundance_bar_termination
all_variables <- ls()
all_variables
source("p_rel_abundance_bac.R")
source("p_FvsB_ratio.R")
source("p_abundance_barplot_termination.R")
ggarrange(ggarrange(p_Allobaculum,p_Bacteroides,p_Bifidobacterium,p_Clostridium,
p_Dehalobacterium,p_Lactobacillus,p_Lactococcus,p_Oscillospira,
ncol = 4,
nrow = 2,
labels = c("A","B","C","D","E","F","G","H")),
ggarrange(p_BvsF,p_abundance_bar_termination,
ncol = 2,
nrow = 1,
labels = c("I","J")))
ggarrange(ggarrange(p_Allobaculum,p_Bacteroides,p_Bifidobacterium,p_Clostridium,
p_Dehalobacterium,p_Lactobacillus,p_Lactococcus,p_Oscillospira,
ncol = 4,
nrow = 2,
labels = c("A","B","C","D","E","F","G","H")),
ggarrange(p_BvsF,p_abundance_bar_termination,
ncol = 2,
nrow = 1,
labels = c("I","J")),
nrow = 2)
ggarrange(ggarrange(p_Allobaculum,p_Bacteroides,p_Bifidobacterium,p_Clostridium,
p_Dehalobacterium,p_Lactobacillus,p_Lactococcus,p_Oscillospira,
ncol = 4,
nrow = 2,
labels = c("A","B","C","D","E","F","G","H"),
common.legend = TURE),
ggarrange(p_BvsF,p_abundance_bar_termination,
ncol = 2,
nrow = 1,
labels = c("I","J")),
nrow = 2)
ggarrange(ggarrange(p_Allobaculum,p_Bacteroides,p_Bifidobacterium,p_Clostridium,
p_Dehalobacterium,p_Lactobacillus,p_Lactococcus,p_Oscillospira,
ncol = 4,
nrow = 2,
labels = c("A","B","C","D","E","F","G","H"),
common.legend = TRUE),
ggarrange(p_BvsF,p_abundance_bar_termination,
ncol = 2,
nrow = 1,
labels = c("I","J")),
nrow = 2)
p_BvsF <- ggplot(merged_df, aes(x= Treatment, y= ratio)) +
stat_boxplot(geom ='errorbar', linetype=1, width=0.2) +
geom_boxplot(outlier.shape = NA,alpha = 1,aes(fill=Treatment), coef=1.5) +
geom_jitter(show.legend=FALSE, width=0.25, shape=21, fill="black") +
stat_summary(fun=mean, show.legend=FALSE, geom="crossbar", linetype=3,
color="black",width=0.75, size=0.4)+
scale_x_discrete(breaks=groups,
labels=c(glue("(N={chp_n})"),
glue("(N={sdt_n})"),
glue("(N={pty_n})"),
glue("(N={fvt_n})"),
glue("(N={obese_n})"),
glue("(N={lean_n})")
)
) +
theme(legend.position = "none")
p_BvsF <- ggplot(merged_df, aes(x= Treatment, y= ratio)) +
stat_boxplot(geom ='errorbar', linetype=1, width=0.2) +
geom_boxplot(outlier.shape = NA,alpha = 1,aes(fill=Treatment), coef=1.5) +
geom_jitter(show.legend=FALSE, width=0.25, shape=21, fill="black") +
stat_summary(fun=mean, show.legend=FALSE, geom="crossbar", linetype=3,
color="black",width=0.75, size=0.4)+
scale_x_discrete(breaks=groups,
labels=c(glue("(N={chp_n})"),
glue("(N={sdt_n})"),
glue("(N={pty_n})"),
glue("(N={fvt_n})"),
glue("(N={obese_n})"),
glue("(N={lean_n})")
)
) +
theme(legend.position = "none")+
scale_fill_manual(values = cols) +
labs(x="", y="Ration", title="Ration of Bacteroidetes/Firmicutes at Termination") +
stat_pvalue_manual(stat.test,label = "p.adj.signif", tip.length = 0, size = 6,
y.position = c(0.6,NA,NA,NA,0.5))+
theme_classic() +
mytheme_alpha
p_BvsF
p_BvsF <- ggplot(merged_df, aes(x= Treatment, y= ratio)) +
stat_boxplot(geom ='errorbar', linetype=1, width=0.2) +
geom_boxplot(outlier.shape = NA,alpha = 1,aes(fill=Treatment), coef=1.5) +
geom_jitter(show.legend=FALSE, width=0.25, shape=21, fill="black") +
stat_summary(fun=mean, show.legend=FALSE, geom="crossbar", linetype=3,
color="black",width=0.75, size=0.4)+
scale_x_discrete(breaks=groups,
labels=c(glue("(N={chp_n})"),
glue("(N={sdt_n})"),
glue("(N={pty_n})"),
glue("(N={fvt_n})"),
glue("(N={obese_n})"),
glue("(N={lean_n})")
)
) +
scale_fill_manual(values = cols) +
labs(x="", y="Ration", title="Ration of Bacteroidetes/Firmicutes at Termination") +
stat_pvalue_manual(stat.test,label = "p.adj.signif", tip.length = 0, size = 6,
y.position = c(0.6,NA,NA,NA,0.5))+
theme_classic() +
mytheme_alpha+
guides(Treatment=FALSE)
p_BvsF <- ggplot(merged_df, aes(x= Treatment, y= ratio)) +
stat_boxplot(geom ='errorbar', linetype=1, width=0.2) +
geom_boxplot(outlier.shape = NA,alpha = 1,aes(fill=Treatment), coef=1.5) +
geom_jitter(show.legend=FALSE, width=0.25, shape=21, fill="black") +
stat_summary(fun=mean, show.legend=FALSE, geom="crossbar", linetype=3,
color="black",width=0.75, size=0.4)+
scale_x_discrete(breaks=groups,
labels=c(glue("(N={chp_n})"),
glue("(N={sdt_n})"),
glue("(N={pty_n})"),
glue("(N={fvt_n})"),
glue("(N={obese_n})"),
glue("(N={lean_n})")
)
) +
scale_fill_manual(values = cols) +
labs(x="", y="Ration", title="Ration of Bacteroidetes/Firmicutes at Termination") +
stat_pvalue_manual(stat.test,label = "p.adj.signif", tip.length = 0, size = 6,
y.position = c(0.6,NA,NA,NA,0.5))+
theme_classic() +
mytheme_alpha+
guides(Treatment="mone")
p_BvsF
p_BvsF <- ggplot(merged_df, aes(x= Treatment, y= ratio)) +
stat_boxplot(geom ='errorbar', linetype=1, width=0.2) +
geom_boxplot(outlier.shape = NA,alpha = 1,aes(fill=Treatment), coef=1.5, show.legend = FALSE) +
geom_jitter(show.legend=FALSE, width=0.25, shape=21, fill="black") +
stat_summary(fun=mean, show.legend=FALSE, geom="crossbar", linetype=3,
color="black",width=0.75, size=0.4)+
scale_x_discrete(breaks=groups,
labels=c(glue("(N={chp_n})"),
glue("(N={sdt_n})"),
glue("(N={pty_n})"),
glue("(N={fvt_n})"),
glue("(N={obese_n})"),
glue("(N={lean_n})")
)
) +
scale_fill_manual(values = cols) +
labs(x="", y="Ration", title="Ration of Bacteroidetes/Firmicutes at Termination") +
stat_pvalue_manual(stat.test,label = "p.adj.signif", tip.length = 0, size = 6,
y.position = c(0.6,NA,NA,NA,0.5))+
theme_classic() +
mytheme_alpha+
guides(Treatment="mone")
p_BvsF
p_BvsF <- ggplot(merged_df, aes(x= Treatment, y= ratio)) +
stat_boxplot(geom ='errorbar', linetype=1, width=0.2) +
geom_boxplot(outlier.shape = NA,alpha = 1,aes(fill=Treatment), coef=1.5, show.legend = FALSE) +
geom_jitter(show.legend=FALSE, width=0.25, shape=21, fill="black") +
stat_summary(fun=mean, show.legend=FALSE, geom="crossbar", linetype=3,
color="black",width=0.75, size=0.4)+
scale_x_discrete(breaks=groups,
labels=c(glue("(N={chp_n})"),
glue("(N={sdt_n})"),
glue("(N={pty_n})"),
glue("(N={fvt_n})"),
glue("(N={obese_n})"),
glue("(N={lean_n})")
)
) +
scale_fill_manual(values = cols) +
labs(x="", y="Ration", title="Ration of Bacteroidetes/Firmicutes at Termination") +
stat_pvalue_manual(stat.test,label = "p.adj.signif", tip.length = 0, size = 6,
y.position = c(0.6,NA,NA,NA,0.5))+
theme_classic() +
mytheme_alpha
p_BvsF
source("p_FvsB_ratio.R")
ggarrange(ggarrange(p_Allobaculum,p_Bacteroides,p_Bifidobacterium,p_Clostridium,
p_Dehalobacterium,p_Lactobacillus,p_Lactococcus,p_Oscillospira,
ncol = 4,
nrow = 2,
labels = c("A","B","C","D","E","F","G","H"),
common.legend = TRUE),
ggarrange(p_BvsF,p_abundance_bar_termination,
ncol = 2,
nrow = 1,
labels = c("I","J")),
nrow = 2)
p_abundance_bar_termination <- ggplot(df0, aes(Sample, Abundance, fill = fct_reorder(tax, Abundance, .fun = mean))) +
geom_col(width = 0.8) +
theme_classic() +
scale_fill_jco(name = "Taxonomy") +
scale_fill_manual(values=rep(col_vector,10),name="Phylum")+
mytheme_beta+
scale_x_discrete(breaks=groups,
labels=c(glue("FVT\nChP"),
glue("FVT\nSDT"),
glue("FVT\nPyT"),
glue("Unmodified\nFVT"),
glue("Obese\ncontrol"),
glue("Lean\ncontrol")
)
) +
theme_classic() +
labs(x= "Treatment",y="Mean Relative abundance (%)", title = "Termination")
p_abundance_bar_termination
ggarrange(ggarrange(p_Allobaculum,p_Bacteroides,p_Bifidobacterium,p_Clostridium,
p_Dehalobacterium,p_Lactobacillus,p_Lactococcus,p_Oscillospira,
ncol = 4,
nrow = 2,
labels = c("A","B","C","D","E","F","G","H"),
common.legend = TRUE),
ggarrange(p_BvsF,p_abundance_bar_termination,
ncol = 2,
nrow = 1,
labels = c("I","J")),
nrow = 2)
mytheme_alpha <- theme(text = element_text(size = 8, colour = "Black",family = "Arial"),
axis.line=element_line(size=0.5),
#panel.border = element_blank(),
axis.text=element_text(size = 8, colour = "Black"),
axis.ticks=element_line(size=1, colour = "Black"),
axis.ticks.x = element_blank(),
strip.background = element_rect(colour = "white", fill = "white"),
# axis.text.x=element_blank(),
axis.title = element_text(size = 8, face = "bold"),
strip.text.x = element_text(angle = 30, size=8, face = "bold"),
legend.text = element_text(size=8),
legend.key.size = unit(8, "pt"),
legend.title = element_text(size = 8,face = "bold"),
title = element_text(size =8, face = "bold")
)
source("p_rel_abundance_bac.R")
source("p_FvsB_ratio.R")
source("p_abundance_barplot_termination.R")
ggarrange(ggarrange(p_Allobaculum,p_Bacteroides,p_Bifidobacterium,p_Clostridium,
p_Dehalobacterium,p_Lactobacillus,p_Lactococcus,p_Oscillospira,
ncol = 4,
nrow = 2,
labels = c("A","B","C","D","E","F","G","H"),
common.legend = TRUE),
ggarrange(p_BvsF,p_abundance_bar_termination,
ncol = 2,
nrow = 1,
labels = c("I","J")),
nrow = 2)
p_abundance_bar_termination <- ggplot(df0, aes(Sample, Abundance, fill = fct_reorder(tax, Abundance, .fun = mean))) +
geom_col(width = 0.8) +
theme_classic() +
scale_fill_jco(name = "Taxonomy") +
scale_fill_manual(values=rep(col_vector,10),name="Phylum")+
mytheme_beta+
scale_x_discrete(breaks=groups,
labels=c(glue("FVT\nChP"),
glue("FVT\nSDT"),
glue("FVT\nPyT"),
glue("Unmodified\nFVT"),
glue("Obese\ncontrol"),
glue("Lean\ncontrol")
)
) +
theme_classic() +
labs(x= "Treatment",y="Mean Relative abundance (%)", title = "Termination")
p_abundance_bar_termination
ggarrange(ggarrange(p_Allobaculum,p_Bacteroides,p_Bifidobacterium,p_Clostridium,
p_Dehalobacterium,p_Lactobacillus,p_Lactococcus,p_Oscillospira,
ncol = 4,
nrow = 2,
labels = c("A","B","C","D","E","F","G","H"),
common.legend = TRUE),
ggarrange(p_BvsF,p_abundance_bar_termination,
ncol = 2,
nrow = 1,
labels = c("I","J")),
nrow = 2)
source("p_rel_abundance_bac.R")
source("p_rel_abundance_bac.R")
p_Oscillospira <- ggplot_boxplot_abundance(df_bac)+
stat_pvalue_manual(stat_bac,label = "p.adj", tip.length = 0, size = 3,
y.position = c(NA,NA,NA,NA,3.8))
source("p_rel_abundance_bac.R")
source("p_FvsB_ratio.R")
source("p_abundance_barplot_termination.R")
ggarrange(ggarrange(p_Allobaculum,p_Bacteroides,p_Bifidobacterium,p_Clostridium,
p_Dehalobacterium,p_Lactobacillus,p_Lactococcus,p_Oscillospira,
ncol = 4,
nrow = 2,
labels = c("A","B","C","D","E","F","G","H"),
common.legend = TRUE,
widths = 4，
ggarrange(ggarrange(p_Allobaculum,p_Bacteroides,p_Bifidobacterium,p_Clostridium,
p_Dehalobacterium,p_Lactobacillus,p_Lactococcus,p_Oscillospira,
ncol = 4,
nrow = 2,
labels = c("A","B","C","D","E","F","G","H"),
common.legend = TRUE,
widths = c("1","1","1","1","1","1"),
heights =c("1","1")),
ggarrange(p_BvsF,p_abundance_bar_termination,
ncol = 2,
nrow = 1,
labels = c("I","J"),
heights = c("1","1"),
widths = c("1","1")),
nrow = 2)
ggarrange(ggarrange(p_Allobaculum,p_Bacteroides,p_Bifidobacterium,p_Clostridium,
p_Dehalobacterium,p_Lactobacillus,p_Lactococcus,p_Oscillospira,
ncol = 4,
nrow = 2,
labels = c("A","B","C","D","E","F","G","H"),
common.legend = TRUE,
widths = c(1,1,1,1,1,1),
heights =c(1,1)),
ggarrange(p_BvsF,p_abundance_bar_termination,
ncol = 2,
nrow = 1,
labels = c("I","J"),
heights = c(1,1),
widths = c(1,1)),
nrow = 2)
ggarrange(ggarrange(p_Allobaculum,p_Bacteroides,p_Bifidobacterium,p_Clostridium,
p_Dehalobacterium,p_Lactobacillus,p_Lactococcus,p_Oscillospira,
ncol = 4,
nrow = 2,
labels = c("A","B","C","D","E","F","G","H"),
common.legend = TRUE)
ggarrange(p_BvsF,p_abundance_bar_termination,
ggarrange(ggarrange(p_Allobaculum,p_Bacteroides,p_Bifidobacterium,p_Clostridium,
p_Dehalobacterium,p_Lactobacillus,p_Lactococcus,p_Oscillospira,
ncol = 4,
nrow = 2,
labels = c("A","B","C","D","E","F","G","H"),
common.legend = TRUE)
ggarrange(p_BvsF,p_abundance_bar_termination,
ggarrange(ggarrange(p_Allobaculum,p_Bacteroides,p_Bifidobacterium,p_Clostridium,
p_Dehalobacterium,p_Lactobacillus,p_Lactococcus,p_Oscillospira,
ncol = 4,
nrow = 2,
labels = c("A","B","C","D","E","F","G","H"),
common.legend = TRUE),
ggarrange(p_BvsF,p_abundance_bar_termination,
ncol = 2,
nrow = 1,
labels = c("I","J")
),
nrow = 2,
heights = c(2,1),
widths = c(4,4))
