p_afterfvt <- phyloseq::plot_ordination(ps, GP.ord, axes= c(1:4),color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" afterfvt\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_afterfvt
p_afterfvt <- phyloseq::plot_ordination(ps, GP.ord, axes= c(2:4),color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" afterfvt\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_afterfvt
p_afterfvt <- phyloseq::plot_ordination(ps, GP.ord, axes= c(4:5),color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" afterfvt\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_afterfvt
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(1,2), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(1,2), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(2,3), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(3,4), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(1,3), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(1,4), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(1,2), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(4,5), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(1,5), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(2,5), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(2,4), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(1,2), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_afterfvt <- phyloseq::plot_ordination(ps, GP.ord, axes= c(1:2),color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" afterfvt\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_afterfvt
#Calculate pairwise p value result
metadata <- data.frame(sample_data(ps))
cbn <- combn(x=unique(metadata$Liver_response), m = 2)
cbn <- cbn[,1:4]
p <- c()
r <- c()
for(i in 1:ncol(cbn)){
ps.subs <- subset_samples(ps, Liver_response %in% cbn[,i])
metadata_sub <- data.frame(sample_data(ps.subs))
permanova_pairwise <- adonis2(phyloseq::distance(ps.subs, method = Method) ~ Liver_response,
data = metadata_sub)
p <- c(p, permanova_pairwise$`Pr(>F)`[1])
r <- c(r, permanova_pairwise$R2[1])
}
p_control <- p[1]
p_treatment <- p[2:4]
p_treatment.adj <- round(p.adjust(p_treatment, method = "fdr"),digits=3)
p_treatment.adj <- c(p_control,p_treatment.adj)
t_afterfvt <- data.frame(Group1=c("Obese_control_Response","Obese_control_Response","Obese_control_Response","Obese_control_Response"),
Group2=c("Lean_control_Non_Response","Unmodified_FVT_Non_Response","Unmodified_FVT_Response","Obese_control_Non_Response"),
R2= round(r,digits = 3),
p=round(p,digits = 3),
p.adj=p_treatment.adj)
p_afterfvt_stat<-ggplot()+
theme_void() +  # Remove background
theme(
axis.title = element_blank(),  # Remove axis titles
axis.text = element_blank(),   # Remove axis text
axis.ticks = element_blank()   # Remove axis ticks
)+
annotate(geom="table",
x=0.5,
y=0.5,
label = list(t_afterfvt))
p_afterfvt_stat
adonis_sub_afterfvt <-adonis_sub
ps <- ps.termination
GP.ord <- ordinate(ps, "PCoA", Method)
new_colnames <- gsub("Axis.", "PCoA", colnames(GP.ord$vectors))
colnames(GP.ord$vectors) <- new_colnames
bray.PSB <- phyloseq::distance(ps, method = Method)
# make a data frame from the sample_data
sampledf.PSB <- data.frame(sample_data(ps))
adonis_sub <- adonis2(bray.PSB ~ Liver_response, method = Method, data = sampledf.PSB, permutations = 999)
adonis_R2 <- adonis_sub[1,3]
adonis_p <- adonis_sub[1,5]
ps@sam_data$Liver_response <- factor(ps@sam_data$Liver_response, levels = liver_group)
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(1,2), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
#Calculate pairwise p value result
metadata <- data.frame(sample_data(ps))
cbn <- combn(x=unique(metadata$Liver_response), m = 2)
cbn <- cbn[,1:4]
p <- c()
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(2,3), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(1,3), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(2,3), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(3,4), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(2,3), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(1,3), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
p_termination <- phyloseq::plot_ordination(ps, GP.ord, axes = c(1,2), color="Liver_response") +
stat_ellipse(geom = "polygon", level = 0.95, fill = NA, linewidth = 1,show.legend = FALSE) +
geom_point(alpha=.8, size=2,aes(color=Liver_response)) +
scale_color_manual(values= liver_cols)+
ggtitle(paste(" termination\n",
"R2=", format(adonis_R2[1],digits = 2),", P=",format(adonis_p[1], digits = 1),"\n")) +
theme_classic()+
mytheme_beta
p_termination
#Calculate pairwise p value result
metadata <- data.frame(sample_data(ps))
cbn <- combn(x=unique(metadata$Liver_response), m = 2)
cbn <- cbn[,1:4]
p <- c()
r <- c()
for(i in 1:ncol(cbn)){
ps.subs <- subset_samples(ps, Liver_response %in% cbn[,i])
metadata_sub <- data.frame(sample_data(ps.subs))
permanova_pairwise <- adonis2(phyloseq::distance(ps.subs, method = Method) ~ Liver_response,
data = metadata_sub)
p <- c(p, permanova_pairwise$`Pr(>F)`[1])
r <- c(r, permanova_pairwise$R2[1])
}
p_control <- p[1]
p_treatment <- p[2:4]
p_treatment.adj <- round(p.adjust(p_treatment, method = "fdr"),digits=3)
p_treatment.adj <- c(p_control,p_treatment.adj)
t_termination <- data.frame(Group1=c("Obese_control_Response","Obese_control_Response","Obese_control_Response","Obese_control_Response"),
Group2=c("Lean_control_Non_Response","Unmodified_FVT_Non_Response","Unmodified_FVT_Response","Obese_control_Non_Response"),
R2= round(r,digits = 3),
p=round(p,digits = 3),
p.adj=p_treatment.adj)
# p_beta_bac<- ggarrange(p_arrival,
#                 p_beforefvt,
#                 p_afterfvt,
#                 p_termination,
#                 nrow=1, ncol = 4,
#                 font.label = list(size = 20),
#                 common.legend = TRUE,
#                 legend = "bottom")
p_beta_stat_bac <- ggarrange(p_arrival,
p_afterfvt,
p_termination,
p_arrival_stat,
p_afterfvt_stat,
p_termination_stat,
nrow=2, ncol = 3,
font.label = list(size = 10),
common.legend = TRUE,
legend = "bottom")
p_beta_stat_bac
source("4_Analysis0_file_loading_and_prep.R")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("4_Analysis0_file_loading_and_prep.R")
ps <- subset_samples(PSV.no.realm, Treatment %in% c("Unmodified_FVT","Obese_control","Lean_control"))
ps@sam_data$Liver_response <- paste(ps@sam_data$Treatment,ps@sam_data$Liver_response, sep = "_")
ps <- subset_samples(ps, Sample_time_point %in% "Termination")
ps <- tax_glom(ps, "Species", NArm = FALSE) #select a level to compare
### loop for all the grouping compared with Obese control
Liver_response <- unique(sample_data(ps)$Liver_response)
Liver_response
ps <- tax_glom(ps, "Genus", NArm = FALSE) #select a level to compare
### loop for all the grouping compared with Obese control
Liver_response <- unique(sample_data(ps)$Liver_response)
Liver_response
Liver_response <- Liver_response[Liver_response!="Obese_control_Response"]
path_table <- "Bacteriome/stat_result/desep2-sub/"
dir.create(path_table)
for (group in Liver_response){
ps.sub <- prune_samples(sample_data(ps)$Liver_response %in% c(group, "Obese_control_Response"), ps)
ps.sub
# remove all error taxa
ps.ds <- phyloseq_to_deseq2(ps.sub, ~Liver_response)
# solve rows without a zero, deseq need to calculate the geometric zero,
cts <- counts(ps.ds)
geoMeans <- apply(cts, 1, function(row) if (all(row == 0)) 0 else exp(mean(log(row[row != 0]))))
dds <- estimateSizeFactors(ps.ds, geoMeans=geoMeans)
ps.ds <-  DESeq(dds, test="Wald", fitType="parametric")
# result
res = results(ps.ds, cooksCutoff = FALSE)
#alpha = 0.0001
sigtab = res
sigtab = cbind(as(sigtab, "data.frame"), as(tax_table(ps)[rownames(sigtab), ], "matrix"))
head(sigtab)
theme_set(theme_bw())
scale_fill_discrete <- function(palname = "Set1", ...) {
scale_fill_brewer(palette = palname, ...)
}
# Phylum order
# x = tapply(sigtab$log2FoldChange, sigtab$Phylum, function(x) max(x))
# x = sort(x, TRUE)
# sigtab$Phylum = factor(as.character(sigtab$Phylum), levels=names(x))
# # Speciea order
# x = tapply(sigtab$log2FoldChange, sigtab$Species, function(x) max(x))
# x = sort(x, TRUE)
# sigtab$Species = factor(as.character(sigtab$Species), levels=names(x))
write.table(data.frame(sigtab), paste0(path_table,str_replace(group," ",""),"_HFD.tsv"), sep="\t", col.names = NA)
}
source("4_Analysis0_file_loading_and_prep.R")
ps <- subset_samples(PSV.no.realm, Treatment %in% c("Unmodified_FVT","Obese_control","Lean_control"))
ps@sam_data$Liver_response <- paste(ps@sam_data$Treatment,ps@sam_data$Liver_response, sep = "_")
ps <- subset_samples(ps, Sample_time_point %in% "Termination")
ps <- tax_glom(ps, "Genus", NArm = FALSE) #select a level to compare
### loop for all the grouping compared with Obese control
Liver_response <- unique(sample_data(ps)$Liver_response)
Liver_response
Liver_response <- Liver_response[Liver_response!="Obese_control_Response"]
path_table <- "stat_result/desep2-sub/"
dir.create(path_table)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
path_table <- "stat_result/desep2-sub/"
dir.create(path_table)
for (group in Liver_response){
ps.sub <- prune_samples(sample_data(ps)$Liver_response %in% c(group, "Obese_control_Response"), ps)
ps.sub
# remove all error taxa
ps.ds <- phyloseq_to_deseq2(ps.sub, ~Liver_response)
# solve rows without a zero, deseq need to calculate the geometric zero,
cts <- counts(ps.ds)
geoMeans <- apply(cts, 1, function(row) if (all(row == 0)) 0 else exp(mean(log(row[row != 0]))))
dds <- estimateSizeFactors(ps.ds, geoMeans=geoMeans)
ps.ds <-  DESeq(dds, test="Wald", fitType="parametric")
# result
res = results(ps.ds, cooksCutoff = FALSE)
#alpha = 0.0001
sigtab = res
sigtab = cbind(as(sigtab, "data.frame"), as(tax_table(ps)[rownames(sigtab), ], "matrix"))
head(sigtab)
theme_set(theme_bw())
scale_fill_discrete <- function(palname = "Set1", ...) {
scale_fill_brewer(palette = palname, ...)
}
# Phylum order
# x = tapply(sigtab$log2FoldChange, sigtab$Phylum, function(x) max(x))
# x = sort(x, TRUE)
# sigtab$Phylum = factor(as.character(sigtab$Phylum), levels=names(x))
# # Speciea order
# x = tapply(sigtab$log2FoldChange, sigtab$Species, function(x) max(x))
# x = sort(x, TRUE)
# sigtab$Species = factor(as.character(sigtab$Species), levels=names(x))
write.table(data.frame(sigtab), paste0(path_table,str_replace(group," ",""),"_HFD.tsv"), sep="\t", col.names = NA)
}
tab_FVTN_all <- read.table("stat_result/desep2-sub/Unmodified_FVT_Non_Response_HFD.tsv", sep = "\t",header = T, row.names = 1)
tab_FVT_all <- read.table("stat_result/desep2-sub/Unmodified_FVT_Response_HFD.tsv", sep = "\t", header = T, row.names = 1)
tab_HFDN_all <- read.table("stat_result/desep2-sub/Obese_control_Non_Response_HFD.tsv", sep = "\t",header = T, row.names = 1)
tab_LFD_all <- read.table("stat_result/desep2-sub/Lean_control_Non_Response_HFD.tsv", sep = "\t", header = T, row.names = 1)
##############################Volcano plot#####################################
# #Load packages needed for making volcano plot
library(EnhancedVolcano)
# #Cut off padj=0.05, log2FoldChange=0.6
p_vol_FVTN<-  EnhancedVolcano(tab_FVTN_all,
x="log2FoldChange",
y="pvalue",
lab = tab_FVTN_all$Species,
# lab = tab_FVTN_all$Species,
pCutoff = 0.05,
FCcutoff = 0.6,
pointSize = 4.0,
labSize = 3.0,
# boxedLabels = TRUE,
title = 'Obese-control vs Unmodified-FVT non response')
p_vol_FVT<-  EnhancedVolcano(tab_FVT_all,
x="log2FoldChange",
y="pvalue",
lab = tab_FVT_all$Species,
# lab = tab_CHP_all$Species,
pCutoff = 0.05,
FCcutoff = 0.6,
pointSize = 4.0,
labSize = 3.0,
# boxedLabels = TRUE,
title = 'Obese-control vs Unmodified-FVT response')
p_vol_HFDN<-  EnhancedVolcano(tab_HFDN_all,
x="log2FoldChange",
y="pvalue",
lab = tab_HFDN_all$Species,
# lab = tab_CHP_all$Species,
pCutoff = 0.05,
FCcutoff = 0.6,
pointSize = 4.0,
labSize = 3.0,
# boxedLabels = TRUE,
title = 'Obese-control vs Obese-control non response')
p_vol_LFD<-  EnhancedVolcano(tab_LFD_all,
x="log2FoldChange",
y="pvalue",
lab = tab_LFD_all$Species,
# lab = tab_CHP_all$Species,
pCutoff = 0.05,
FCcutoff = 0.6,
pointSize = 4.0,
labSize = 3.0,
# boxedLabels = TRUE,
title = 'Obese-control vs Lean-control')
ggarrange(p_vol_FVTN,p_vol_FVT+rremove("ylab"),p_vol_HFDN,
p_vol_LFD+rremove("ylab"),
nrow=2, ncol = 2,
# labels = c("A","B","C","D","E","F"),
font.label = list(size = 20),
common.legend = TRUE,
legend = "bottom")
# #Cut off padj=0.05, log2FoldChange=0.6
p_vol_FVTN<-  EnhancedVolcano(tab_FVTN_all,
x="log2FoldChange",
y="pvalue",
lab = tab_FVTN_all$Genus,
# lab = tab_FVTN_all$Species,
pCutoff = 0.05,
FCcutoff = 0.6,
pointSize = 4.0,
labSize = 3.0,
# boxedLabels = TRUE,
title = 'Obese-control vs Unmodified-FVT non response')
p_vol_FVT<-  EnhancedVolcano(tab_FVT_all,
x="log2FoldChange",
y="pvalue",
lab = tab_FVT_all$Genus,
# lab = tab_CHP_all$Species,
pCutoff = 0.05,
FCcutoff = 0.6,
pointSize = 4.0,
labSize = 3.0,
# boxedLabels = TRUE,
title = 'Obese-control vs Unmodified-FVT response')
p_vol_HFDN<-  EnhancedVolcano(tab_HFDN_all,
x="log2FoldChange",
y="pvalue",
lab = tab_HFDN_all$Genus,
# lab = tab_CHP_all$Species,
pCutoff = 0.05,
FCcutoff = 0.6,
pointSize = 4.0,
labSize = 3.0,
# boxedLabels = TRUE,
title = 'Obese-control vs Obese-control non response')
p_vol_LFD<-  EnhancedVolcano(tab_LFD_all,
x="log2FoldChange",
y="pvalue",
lab = tab_LFD_all$Genus,
# lab = tab_CHP_all$Species,
pCutoff = 0.05,
FCcutoff = 0.6,
pointSize = 4.0,
labSize = 3.0,
# boxedLabels = TRUE,
title = 'Obese-control vs Lean-control')
ggarrange(p_vol_FVTN,p_vol_FVT+rremove("ylab"),p_vol_HFDN,
p_vol_LFD+rremove("ylab"),
nrow=2, ncol = 2,
# labels = c("A","B","C","D","E","F"),
font.label = list(size = 20),
common.legend = TRUE,
legend = "bottom")
